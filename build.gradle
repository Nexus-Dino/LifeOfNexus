buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'


version = '1.0.0-1.18.2'
group = 'io.github.nexusdino.lifeofnexus' 
archivesBaseName = 'lifeofnexus'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'parchment', version: '1.18.1-2022.03.06-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') 

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'lifeofnexus'

            mods {
                lifeofnexus {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'lifeofnexus'

            mods {
                lifeofnexus {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'lifeofnexus'

            mods {
                lifeofnexus {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'lifeofnexus', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                lifeofnexus {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		name = "Progwm Maven"
		url = "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven { 
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' 
	}
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.18.2-40.0.12'

    // Real mod deobf dependency examples - these get remapped to your current mappings
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency

	implementation fg.deobf('software.bernie.geckolib:geckolib-1.18-forge:3.0.12')
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "lifeofnexus",
                "Specification-Vendor"    : "nexusdino",
                "Specification-Version"   : "1.0.0-1.18.2", 
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "nexusdino",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
